prototype(Neos.Fusion.Form:Runtime.RuntimeForm) {
    @class = 'Neos\\Fusion\\Form\\Runtime\\FusionObjects\\RuntimeFormImplementation'

    identifier = null

    data = Neos.Fusion:DataStructure

    process = Neos.Fusion.Form:Runtime.SingleStepProcess

    actions = Neos.Fusion.Form:Runtime.ActionCollection

    formHeader = afx`
        {Json.stringify(data)}
        <div>
            <Neos.Fusion:Loop items={data.__all} itemName="page">
                <Neos.Fusion.Form:Button field.name="__target" field.value={page} formnovalidate="formnovalidate">{page}</Neos.Fusion.Form:Button>
            </Neos.Fusion:Loop>
        </div>
    `

    formFooter = afx`
        <Neos.Fusion.Form:Button field.name="__target" field.value={data.__prev} @if.hasPrev={data.__prev} formnovalidate="formnovalidate">prev</Neos.Fusion.Form:Button>
        <Neos.Fusion.Form:Button field.name="__target" field.value={data.__next} @if.hasNext={data.__next}>next</Neos.Fusion.Form:Button>
        <Neos.Fusion.Form:Button field.name="__target" @if.hasNoNext={!data.__next}>Submit</Neos.Fusion.Form:Button>
    `

    formRenderer = afx`
        <Neos.Fusion.Form:Form form={form}>
            <Neos.Fusion.Form:Hidden field.name="__state" field.value={data.__state} @if.has={data.__state} />
            <Neos.Fusion.Form:Hidden field.name="__current"  field.value={data.__current} @if.has={data.__current} />
            {header}
            {content}
            {footer}
        </Neos.Fusion.Form:Form>
    `

    #
    # @todo this should become a dynamic segment to allow caching of the first page
    #
    @cache {
        mode = 'uncached'
        context {
            1 = 'node'
            2 = 'documentNode'
            3 = 'site'
        }
    }
}
