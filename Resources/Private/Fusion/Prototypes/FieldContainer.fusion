prototype(Neos.Fusion.Form:FieldContainer)  < prototype(Neos.Fusion:Component) {
    @context.field = ${Form.createFieldDefinition(this.form, this.property, this.multiple)}

    @propTypes {
        form = ${PropTypes.instanceOf('Neos\Fusion\Form\Domain\Model\FormDefinition')}
        name = ${PropTypes.string}
        property = ${PropTypes.string}
        multiple = ${PropTypes.boolean}
        id = ${PropTypes.string}
        class = ${PropTypes.string}
        errorClass = ${PropTypes.string}
        label = ${PropTypes.string}
        content = ${PropTypes.string}
    }

    form = ${form}
    name = null
    property = ${this.name ? Form.fieldNameToPath(this.name) : null}
    multiple = false

    id = null
    class = 'neos-control-group'
    errorClass = 'neos-error'
    label = null
    content = null

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}
        @apply.override = Neos.Fusion:DataStructure {
            class = Neos.Fusion:Join {
                @glue = ' '
                class = ${props.class}
                errorClass = ${props.errorClass}
                errorClass.@if.hasErrors = ${field.errors}
            }
        }

        renderer = afx`
            <div id={props.id} class={props.class}>
                <label class="neos-control-label" @if.has={props.label}>{props.label}</label>
                <div class="neos-controls">
                    {props.content}
                </div>
                <ul @if.hasErrors={field.errors} class="errors">
                    <Neos.Fusion:Loop items={field.result.flattenedErrors} itemName="errors" >
                        <Neos.Fusion:Loop items={errors} itemName="error" >
                            <li><span class="neos-help-block">{error}</span></li>
                        </Neos.Fusion:Loop>
                    </Neos.Fusion:Loop>
                </ul>
            </div>
        `
    }
}

