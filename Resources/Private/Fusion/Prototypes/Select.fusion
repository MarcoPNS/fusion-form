prototype(Neos.Fusion.Form:Select)  < prototype(Neos.Fusion.Form:Field) {
    @context.__multiple = ${this.multiple}

    @propTypes {
        content = ${PropTypes.string}
        multiple = ${PropTypes.boolean}
    }

    content = null
    multiple = false

    renderer = afx`
        <select
            {...props.attributes}
            id={props.id}
            class={props.class}
            name={field.name + (props.multiple ? '[]' : '')}
            required={props.required}
            multiple={props.multiple}
        >
            {props.content}
        </select>
    `

    prototype(Neos.Fusion.Form:Select.Option) {
        # override selected for object/submitted values
        renderer.attributes.selected.@process.singlevalue = ${(field.current == props.value) ? true : false}
        renderer.attributes.selected.@process.singlevalue.@if.hasCurrent = ${field.current}
        renderer.attributes.selected.@process.singlevalue.@if.isSingle = ${!__multiple}

        # override selected for object/submitted multivalues
        renderer.attributes.selected.@process.multivalue = ${Array.indexOf(field.current, props.value) > -1}
        renderer.attributes.selected.@process.multivalue.@if.hasCurrent = ${field.current}
        renderer.attributes.selected.@process.multivalue.@if.isMultiple = ${__multiple}
    }
}
