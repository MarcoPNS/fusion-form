prototype(Neos.Fusion.Form:Checkbox)  < prototype(Neos.Fusion.Form:Field) {
    @context.__multiple = ${this.multiple}

    @propTypes {
        multiple = ${PropTypes.boolean}
        checked = ${PropTypes.boolean}
    }

    multiple = false
    checked = false
    # override checked state for object/submitted values
    checked.@process.single = ${field.current == field.value}
    checked.@process.single.@if.isSingle = ${__multiple == false}
    checked.@process.single.@if.hasCurrent = ${field.current}
    checked.@process.multiple = ${Array.indexOf(field.current, field.value) > -1}
    checked.@process.multiple.@if.isMultiple = ${__multiple == true}
    checked.@process.multiple.@if.hasCurrent = ${field.current}

    renderer = afx`
        <input
            {...props.attributes}
            id={props.id}
            class={props.class}
            required={props.required}
            type="checkbox"
            name={field.name + (props.multiple ? '[]' : '')}
            value={Form.stringifyValue(field.value)}
            checked={props.checked}
        />
    `
}
