prototype(Neos.Fusion.Form:Checkbox)  < prototype(Neos.Fusion.Form:FieldComponent) {

    renderer = Neos.Fusion:Component {

        #
        # pass down props
        #
        attributes = ${props.atttributes}
        content = ${props.content}

        #
        # the `checked` state is calculated outside the renderer to allow` overriding via `attributes`
        #
        checked = null
        checked.@process.checkMultiValue = ${Array.indexOf(Form.stringifyArray(field.value), Form.stringifyValue(field.targetValue)) > -1}
        checked.@process.checkMultiValue.@if.hasValue = ${field.value}
        checked.@process.checkMultiValue.@if.isMultiple = ${field.multiple}
        checked.@process.checkSingleValue = ${Form.stringifyValue(field.value) == Form.stringifyValue(field.targetValue)}
        checked.@process.checkSingleValue.@if.hasValue = ${field.value}
        checked.@process.checkSingleValue.@if.isSingle = ${!field.multiple}

        renderer = afx`
            <input
                type="checkbox"
                name={field.name}
                value={Form.stringifyValue(field.targetValue)}
                checked={props.checked}
                {...props.attributes}
            />
        `
    }

}
